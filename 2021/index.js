const stringComparator = (a, b) => {
    if (a > b) return 1;
    if (a < b) return -1;
    return 0
}


const seatComparator = (a,b) => {
    if (a.substring(0, 7) === b.substring(0, 7)) {
        return stringComparator(a.substring(7, 10), b.substring(7, 10));
    }
    return stringComparator(b.substring(0, 7), a.substring(0, 7));
}

const seatNumber =(input, min, max, minId) => {
    if (input.length === 1) {
        return minId=== input[0] ? min: max;
    }
    const mid = (max + min) / 2;
    if (input[0] === minId) {
        return seatNumber(input.substring(1), min, Math.floor(mid), minId);
    }
    return seatNumber(input.substring(1), Math.ceil(mid), max, minId);
}

/**
 *
 * @param {Array<string>} seats
 * @return {number}
 */
const findHighestSeat = (seats) => {
    seats.sort(seatComparator);
    console.log(seats[seats.length - 1]);
    const rows = seatNumber(seats[seats.length - 1].substring(0, 7), 0, Math.pow(2, 7) - 1, 'F');
    const columns = seatNumber(seats[seats.length - 1].substring(7, 10), 0, Math.pow(2, 3) - 1, 'L');
    console.log(`row ${rows}, column ${columns}, seat id ${(rows * 8) + columns}`)
    return  (rows * 8) + columns ;
}

const convert = (input) => {
    return input.split("\n");
}

/**
 *
 * @param {string} input
 * @param {string} on
 */
const findBinary = (input, on) => {
    let res = 0;
    for (let index = input.length - 1; index >= 0; index--) {
        if (input[index] === on) {
            res += Math.pow(2, index + 1);
        }
    }
    return res;
}
/**
 *
 * @param {string} first
 * @param {string} second
 */
const differenceOfOne = (first, second) => {
    const binFirst = findBinary(first, 'R');
    const binSecond = findBinary(second, 'R');
    return binSecond === binFirst + 1
}

/**
 *
 * @param seats
 * @param currentIndex
 */
const isMySeat = (seats, currentIndex) => {
    if (currentIndex + 2 >= seats.length) return false;
}

const mySeatId = (seats) => {
    seats.sort(seatComparator);
    return isMySeat(seats, 0);
}


const main = () => {
    const input = "FBBFBFBLRR\n" +
        "FBFFFFFLLR\n" +
        "FBBBBBBLLR\n" +
        "FFBFBBBRLL\n" +
        "FBBFFFFLRR\n" +
        "BFFBFFFLLL\n" +
        "FFBFFFFRLR\n" +
        "FBBBBFBRLR\n" +
        "BFBFFBBRRL\n" +
        "FFFBBBBLLL\n" +
        "BFBBFBBLLL\n" +
        "FBFFFFBRLL\n" +
        "BBFBFFBRRR\n" +
        "BFBBBFFRLR\n" +
        "FBFFFBFRLL\n" +
        "BBBFFFFLLL\n" +
        "FBBFBFBRRR\n" +
        "FFBBBFFRRR\n" +
        "BBFBBBFLLL\n" +
        "BBFFBFBLRL\n" +
        "FBFBBFFLLR\n" +
        "BFFBBBFLRL\n" +
        "FFFBBBFLRL\n" +
        "FBFBFBFRLR\n" +
        "FBFBFFBLLR\n" +
        "BFFFFFBRLL\n" +
        "FFFBBBFLRR\n" +
        "FFBBFBFLLR\n" +
        "FFBBBBFRRL\n" +
        "BFFBFFBRLR\n" +
        "FBBBBFFLRL\n" +
        "BBFFBFFLRR\n" +
        "FFFFBBFRLR\n" +
        "BFBFBBFLRL\n" +
        "BFFFBBFLLR\n" +
        "BFBFFBBLLL\n" +
        "FFBFFFBRRR\n" +
        "BBFFFBBLLL\n" +
        "FFBFBFFRLR\n" +
        "FFFBBFFRRL\n" +
        "FBBFBBFLRR\n" +
        "BBFFBFBRRL\n" +
        "FFBFFBBRRR\n" +
        "BBFFBFBRRR\n" +
        "BFFFBFBLRL\n" +
        "FFFBBFBRLL\n" +
        "BFBBFBFLRL\n" +
        "FFFFFBBRRR\n" +
        "FBBBBBBRRR\n" +
        "FBFBFFFLRR\n" +
        "FBBFFFBLLL\n" +
        "BFBBFFBRLL\n" +
        "BFBFFBBLLR\n" +
        "FFBBFFFLLL\n" +
        "FBBBFBFRLL\n" +
        "FFFFBFFLRL\n" +
        "FFBFBFFLRL\n" +
        "BFBBBFBRLR\n" +
        "BBFBFFBRRL\n" +
        "BFBBBFBLRR\n" +
        "FBBBBFBRRL\n" +
        "BFFFBBBLRL\n" +
        "BFBFFBFLRL\n" +
        "FFFFFBBRLL\n" +
        "BFFBBFBLLL\n" +
        "BBFBBBFRRL\n" +
        "BBBFFFFRRR\n" +
        "FBFBBFFRLL\n" +
        "BFBFBFFRLR\n" +
        "BBBFBBFRRL\n" +
        "BFBFBBFRLR\n" +
        "FFBBFBBRRL\n" +
        "FBFFFFBLRL\n" +
        "BFFBBBFRLR\n" +
        "BFBFFFFRRR\n" +
        "BFBFFFBRRR\n" +
        "FBFBBFFRLR\n" +
        "FBFBBFBLLL\n" +
        "BBBFFBFRLL\n" +
        "BFFBBBBLLL\n" +
        "BBFFFFBRLR\n" +
        "FBBBBBBLRL\n" +
        "BFFFFBFRRL\n" +
        "FFFBBFBLLR\n" +
        "FBFFBBBRRR\n" +
        "BBFFFFBRRR\n" +
        "FBFFFBBLLL\n" +
        "FFBFBFFRLL\n" +
        "FBFFFFBLLL\n" +
        "FFBFFFBLLR\n" +
        "FBFBBFBLRR\n" +
        "FBFBFFBLLL\n" +
        "BFBFBBFLRR\n" +
        "FFBFBFFLLR\n" +
        "FBBFFFFLRL\n" +
        "FFBBFFBRLR\n" +
        "FFBFBBFRRR\n" +
        "BFBFFBFRRR\n" +
        "FFFFBFBLLL\n" +
        "FFBBFFBLLR\n" +
        "BBFFBBFLLL\n" +
        "FFFBFFBRRR\n" +
        "BBFBFFFLRL\n" +
        "BFBFBFBLRR\n" +
        "FFBBFFFRLL\n" +
        "FFBFBBBRLR\n" +
        "BBFBFFFLLL\n" +
        "FBFFBFBRLL\n" +
        "FFBFBFBLLL\n" +
        "BBFFBFFRLR\n" +
        "FBBFFFBLRL\n" +
        "BFBFBFBRLL\n" +
        "BFFBBFFRRR\n" +
        "BBBFBBFLLR\n" +
        "BBFBBFBLRL\n" +
        "BBBFBBBRLR\n" +
        "BBBFBFBRLL\n" +
        "BBFFBBFLLR\n" +
        "FFBBBBFLLL\n" +
        "BBBFFFFRLL\n" +
        "BBFBFBFLLL\n" +
        "FFBBFBBRRR\n" +
        "FFBFBBBRRL\n" +
        "FFBFBBFLRR\n" +
        "FBBFFBBLRL\n" +
        "FFFBFFBRLR\n" +
        "BBBFFBBRLR\n" +
        "FBFBBBBRLL\n" +
        "FFBFFBFLLR\n" +
        "BFFFFBFRRR\n" +
        "FFBBFFBRRL\n" +
        "BBBFFBBRLL\n" +
        "BBBFFBFLLL\n" +
        "BBFBFFFRLR\n" +
        "FFBFFFFLRL\n" +
        "FBFFBFBRRR\n" +
        "BFBFFBBLRL\n" +
        "FBBBBBFLLL\n" +
        "BFBFFBBRLR\n" +
        "BFBFBFBLLR\n" +
        "BBBFFFBLLR\n" +
        "BFBBFBFRLL\n" +
        "FFBFFBFRLR\n" +
        "BFBFBBFLLR\n" +
        "BBFFBBFRRL\n" +
        "FBFBFFFLLR\n" +
        "BBFBBFBRRL\n" +
        "BFBFFBFRRL\n" +
        "BFBBFFFLLL\n" +
        "BBBFFBFRRL\n" +
        "BBBFBBFLRR\n" +
        "BFBBFFFLRR\n" +
        "FBBFBBFLLL\n" +
        "BFBFFFFRLR\n" +
        "FFBBFFFRRR\n" +
        "BBBFBBFRLL\n" +
        "BBBFFFFLRL\n" +
        "BBBBFFFLRR\n" +
        "BFFBFFFRRR\n" +
        "FFBBBBBLRR\n" +
        "FBBFBFBRRL\n" +
        "FFBBBFBLLR\n" +
        "BBFFFFFLLR\n" +
        "FBFFBFFLRR\n" +
        "FBBFBBFLLR\n" +
        "BFBFBFBRRL\n" +
        "BFFFFFBLRR\n" +
        "FFFBBBFRRR\n" +
        "BBFFFFFLRL\n" +
        "BFBFBFBLLL\n" +
        "FFBFBBFLRL\n" +
        "FFBFFBFRRR\n" +
        "FBBBFBBRRR\n" +
        "FFBFBFBRLR\n" +
        "BFFBFBBRRR\n" +
        "BFFFBFFRRR\n" +
        "FFFBFBBLRL\n" +
        "BBBFBFFRRL\n" +
        "BBFBFBBLLR\n" +
        "FBFFBBBLRL\n" +
        "BFBFBBBLRR\n" +
        "FBFBFBBRRL\n" +
        "BFFFFBFRLL\n" +
        "FBBBBFFRLL\n" +
        "BBFFFBFLRR\n" +
        "FBBBFFFLLL\n" +
        "FFFFFBBLRR\n" +
        "BBBFBBBLRL\n" +
        "BBFBFBBRRR\n" +
        "FBFBFFBRLR\n" +
        "FFFBBFFLRL\n" +
        "FBBFBBBRLL\n" +
        "FFBFFFBRLL\n" +
        "BFBBBFBLLR\n" +
        "FBFFFFFLLL\n" +
        "FFBFFBBLRR\n" +
        "FBFBBFBRRR\n" +
        "BBFBBFFRRL\n" +
        "FBBFFBBLRR\n" +
        "BFFBFBFRLL\n" +
        "BFFFFBFLRR\n" +
        "FFFBFBFRRR\n" +
        "BBFFBBBRLL\n" +
        "BFBBFFBLRL\n" +
        "FFBBBBBLLL\n" +
        "FBBFBBFRRL\n" +
        "BFBBFBBRRL\n" +
        "FFFBFFFLRL\n" +
        "FFBFBBBLRL\n" +
        "FBBBFBFRRR\n" +
        "BFFFBFFLRL\n" +
        "BFBBBFFRRL\n" +
        "FBFFFBFLRL\n" +
        "FBBBFFBRRL\n" +
        "FBFBFBFRLL\n" +
        "FBFBBBFRLL\n" +
        "BFFFFFFLRR\n" +
        "FFBBFFBLLL\n" +
        "BFFFFBBRLL\n" +
        "FFBFFBBLLL\n" +
        "FBFBFBFLRL\n" +
        "FBBBFBFLLL\n" +
        "BFBBFFFRLR\n" +
        "BFBBFFFLLR\n" +
        "BFBBBBFLLL\n" +
        "FBBBFFFRLR\n" +
        "FBFFBBBLLL\n" +
        "BBBFFBFLLR\n" +
        "FBFBBBBLRR\n" +
        "FFFFBFFLRR\n" +
        "FBFFFBFRRL\n" +
        "BFFFBFBLLL\n" +
        "BBFFFFFRLL\n" +
        "FFBFFFFLRR\n" +
        "FFFBBFFRLR\n" +
        "FBFBBBFLLR\n" +
        "BFBFBFFLLR\n" +
        "FBBFBFBLLR\n" +
        "FBFFFBFRLR\n" +
        "FBBBFFFRLL\n" +
        "BFFFFBFLLL\n" +
        "FFFBBBBRRR\n" +
        "BFFFFFBRLR\n" +
        "FFFFBBBLRL\n" +
        "FBFBBBFRRR\n" +
        "BFFFBFBRRL\n" +
        "FBBFFBBRLR\n" +
        "BFFBBBBRLL\n" +
        "FBFFBBFLLL\n" +
        "FBFBFFFRRR\n" +
        "FFBFFBFLRR\n" +
        "FBBFBFFRLR\n" +
        "FBFBBFBLRL\n" +
        "FFFBFBFLLL\n" +
        "FFFFBFFRRL\n" +
        "BFBBFFFRLL\n" +
        "BFFBBBBLRR\n" +
        "BBFBFFBRLL\n" +
        "BBFFFFBLRR\n" +
        "BBBFFFFRLR\n" +
        "BFFBBFBRLR\n" +
        "BBFFBFFLLR\n" +
        "FFFFBBFLRL\n" +
        "FBBFBBFRLR\n" +
        "BBFBBFFRLL\n" +
        "BBFFFBBRLL\n" +
        "BFFBBBFRLL\n" +
        "BBFBBFBLLR\n" +
        "BBBFFBBRRL\n" +
        "FFBFFBFRLL\n" +
        "BFBBFBFRRL\n" +
        "BFBFBBBRRR\n" +
        "FBBBFFBRLL\n" +
        "BBBFFBFLRR\n" +
        "FBBFFBBRRL\n" +
        "FFBBFFFLRL\n" +
        "BFFFBFFLRR\n" +
        "FFFFBBBRRR\n" +
        "FBBBFBBLLR\n" +
        "BFBBFBBLRL\n" +
        "FBFFBFBLRL\n" +
        "FFBFBFFLRR\n" +
        "BFFBFBFLRR\n" +
        "BBFBFFFRLL\n" +
        "FBBFFFBRRL\n" +
        "BBBFBFFLRR\n" +
        "BBFBBBBRLL\n" +
        "BBFFBBFRLR\n" +
        "BFBBBBBLRL\n" +
        "BFBFBFBRRR\n" +
        "BFBBFBFLLL\n" +
        "BFFBBBBLRL\n" +
        "FBFFBFBRRL\n" +
        "BBFBFBFLRR\n" +
        "FBBFFFFRRL\n" +
        "BBFFFFBRRL\n" +
        "FFFBFBFRLL\n" +
        "FBFBBFBRLL\n" +
        "FBFBBFFLRR\n" +
        "FFFFBFBRLL\n" +
        "FFFFBBFLLR\n" +
        "FFFFBBBLLR\n" +
        "FBFBBBFRRL\n" +
        "FFFFBBBLLL\n" +
        "BBBFBFFRLL\n" +
        "FBBBBBFRRR\n" +
        "BBFBFFBLRR\n" +
        "BBFFBBFRLL\n" +
        "BFFFBBFRLL\n" +
        "BBBFBBFLLL\n" +
        "BFFBFFBLRL\n" +
        "BBFFFBBRRL\n" +
        "FBFBFBFRRR\n" +
        "BBFFBFFLRL\n" +
        "BBFBBBBRRL\n" +
        "BFFBFFFLLR\n" +
        "FBFBBBBRLR\n" +
        "FBBFBFFRRR\n" +
        "FFBFFBFLRL\n" +
        "BFFFFBFLLR\n" +
        "BFFFBBFRRR\n" +
        "BFFFFBBLLL\n" +
        "FFFBBBFLLR\n" +
        "FBFFFFFRLR\n" +
        "FBFBFFFRRL\n" +
        "FBFBBBBLLL\n" +
        "BBFFFBFRLL\n" +
        "BBFBFBFLRL\n" +
        "FBBFFBFRLL\n" +
        "FFFBFBFLRR\n" +
        "FFBBFFFLRR\n" +
        "BFBFBFBRLR\n" +
        "FFBFFFBRRL\n" +
        "FBBFFBBRRR\n" +
        "BBBFFBFRLR\n" +
        "BFBBFFBLLR\n" +
        "BBBFBFBLRL\n" +
        "FBFBBBBLRL\n" +
        "FBFFFFFRRR\n" +
        "BBFFBBBLRL\n" +
        "BBFFFBBRRR\n" +
        "BFBBBBBLRR\n" +
        "FFBBFBBRLL\n" +
        "BFBBBBFRLR\n" +
        "FFFFBBBRLL\n" +
        "FFBFBBFRLR\n" +
        "FBFBBBBLLR\n" +
        "FFBFBBFRRL\n" +
        "FBBBFFBRLR\n" +
        "FFBFFFFLLR\n" +
        "BFFBBFFLLL\n" +
        "BBFFFBBLLR\n" +
        "BFFFFFFLLR\n" +
        "BBFBFBBLRL\n" +
        "BFFFFFBLLL\n" +
        "FFBBBBBLRL\n" +
        "FBFBFBFLLR\n" +
        "FBFFBFBLRR\n" +
        "BFBFBBFLLL\n" +
        "BFFBBFFLRR\n" +
        "FBFBBBFRLR\n" +
        "BBFFBBBRRR\n" +
        "FFBBBFBLLL\n" +
        "BFBBBFFLLR\n" +
        "BBFFFBFLLL\n" +
        "BFBFFFBLLL\n" +
        "BFBFFFBLRR\n" +
        "BBFBBBFRRR\n" +
        "FFBBFBBLRR\n" +
        "FBFBFFBRRL\n" +
        "BFBBFFBRLR\n" +
        "FFFBBBBRRL\n" +
        "BFBFFFBRLL\n" +
        "FFBBFBFLRL\n" +
        "BFBBFBBLLR\n" +
        "FBBBFFFRRL\n" +
        "FFBBBBBRLL\n" +
        "FBFBFFFRLL\n" +
        "BBBBFFFLRL\n" +
        "FBBFFFBLLR\n" +
        "BBFFFFBRLL\n" +
        "BBFFBBBRLR\n" +
        "BFFFFBBRRR\n" +
        "FFBBFFFLLR\n" +
        "FBBBFFBLLR\n" +
        "BFBBFBFLLR\n" +
        "BBBFBFBRRL\n" +
        "FBBBFBBRLL\n" +
        "BFFBFFFLRR\n" +
        "BFBFFFBRLR\n" +
        "BFBBBFFRRR\n" +
        "BFBFFBBLRR\n" +
        "FBFBBBBRRL\n" +
        "FFFBFBBLRR\n" +
        "FFBFBBBLLR\n" +
        "BBFFBBFLRL\n" +
        "FFFBBFBLRL\n" +
        "FBBFBFBRLL\n" +
        "FBFFBFFRRL\n" +
        "BFFFBFBRLR\n" +
        "BFBFBFFRRR\n" +
        "FFFFBFBLRL\n" +
        "FBBBBBFLLR\n" +
        "FBBBFFFLLR\n" +
        "FFFBFBBRLR\n" +
        "BBBFBBFRRR\n" +
        "BBBFBFBLRR\n" +
        "FBBFBFFLRR\n" +
        "FBFFFBFRRR\n" +
        "BBBFFFBRRL\n" +
        "BBFFFBFRRL\n" +
        "BFBBBFBLRL\n" +
        "FFBBBFBRRL\n" +
        "FFBBBFFRRL\n" +
        "FBBBFBFLLR\n" +
        "FBBFBFBLLL\n" +
        "BBBFFFBLRR\n" +
        "BFBFFBFRLL\n" +
        "FBFFBBBLRR\n" +
        "BFFBFFBLLL\n" +
        "FFFBBBFRLL\n" +
        "BBBFFFBRLL\n" +
        "FBFBBBFLLL\n" +
        "FBFBFBBLRL\n" +
        "FBBFFBBLLL\n" +
        "FBBBBFBRLL\n" +
        "FBBFBFBLRL\n" +
        "FBFFFFBRRL\n" +
        "FFBFBFBRRL\n" +
        "FFBBBBFRRR\n" +
        "BFFBBBFRRL\n" +
        "FBBBBFBLRL\n" +
        "BBFBBBFLRL\n" +
        "BFFFFBBLRL\n" +
        "BFFFBBFRLR\n" +
        "FBBBBBBRLL\n" +
        "FFBFFBBRLR\n" +
        "FBFBFBFLRR\n" +
        "FFFBFBBRLL\n" +
        "BBFBBBBRRR\n" +
        "FFFBBBBLRR\n" +
        "BFBFBBBLRL\n" +
        "FBBFBBFLRL\n" +
        "BBFBFBFLLR\n" +
        "FBBBFBBRLR\n" +
        "FBBBBBBRLR\n" +
        "BFFFBFFRRL\n" +
        "BBBFFFBLLL\n" +
        "FBBFBBBRLR\n" +
        "BBFFBBFRRR\n" +
        "FFBFFFBLLL\n" +
        "FBFFBBFRLR\n" +
        "BFBBBBBRRL\n" +
        "BBFFFFFRRR\n" +
        "BFFFFFBRRR\n" +
        "FFBFBFBRLL\n" +
        "FBFFBBFLRR\n" +
        "FFFFFBBRRL\n" +
        "FBBFFFBLRR\n" +
        "BFFFBFFLLL\n" +
        "BBFBBFFLLL\n" +
        "BBBFBBFRLR\n" +
        "BFFBFBBLLL\n" +
        "FFBFFFFRLL\n" +
        "FBFFBBBRLR\n" +
        "BFFFBBBRLR\n" +
        "BBFFBBBLRR\n" +
        "FFFBBBBRLL\n" +
        "FBBFBFFLLL\n" +
        "BFBFBBBLLL\n" +
        "FBBBBBFLRL\n" +
        "FFBFFBBLRL\n" +
        "BBBFFFBRRR\n" +
        "FFFBFBFLLR\n" +
        "BFFFBBBLRR\n" +
        "BFFFBBBRRL\n" +
        "BBFFFFFLLL\n" +
        "FBBBBBFRRL\n" +
        "BFBFFBBRRR\n" +
        "BFFFFFFRRR\n" +
        "FBFFBFBRLR\n" +
        "BFBBBBFLLR\n" +
        "FFBBBFBRRR\n" +
        "BFBFFFFRRL\n" +
        "BFFBFFBRLL\n" +
        "FFFBFFBLRR\n" +
        "BFFBBFFRRL\n" +
        "BFFFFBFRLR\n" +
        "FBBBBBFRLR\n" +
        "BFBBBBBLLL\n" +
        "FFFBFBBRRR\n" +
        "FFFFBFBRRL\n" +
        "FFFBBBBRLR\n" +
        "FBFBFFBLRR\n" +
        "BFFFBBFLRL\n" +
        "FFBBFFFRLR\n" +
        "FFFBBFBLRR\n" +
        "FBBBBFBLLR\n" +
        "FFBBBFBLRR\n" +
        "FBFBBFFRRL\n" +
        "FFFFBFBLRR\n" +
        "BFBFFFFLLL\n" +
        "FBFBFBBRLL\n" +
        "FFFFBFFRLR\n" +
        "FFBBBBBLLR\n" +
        "BFFFBFFRLL\n" +
        "FFFFBFBLLR\n" +
        "FBFBFBFRRL\n" +
        "BBFBBBFLRR\n" +
        "BBFBBBFLLR\n" +
        "BBFBBFFLRL\n" +
        "BBBFFFFRRL\n" +
        "BFFFFBBRLR\n" +
        "BFBBFFFRRL\n" +
        "BFBBBFFLLL\n" +
        "FFFBBFFRLL\n" +
        "FBBBBFBLRR\n" +
        "BBBFFBFRRR\n" +
        "FBFBFFBLRL\n" +
        "FBBFBFFRRL\n" +
        "FFFBFBBRRL\n" +
        "BFBBFBBRLL\n" +
        "BFBBFBFRRR\n" +
        "FFFBFBBLLL\n" +
        "BFFBFBBLRR\n" +
        "BFBBBBFRLL\n" +
        "BFFBFBBLLR\n" +
        "FFFFBFFLLR\n" +
        "FFBBFBBLRL\n" +
        "BFBFFFFLLR\n" +
        "FBFFBBFRLL\n" +
        "FFFBBBFLLL\n" +
        "BBBFFFFLRR\n" +
        "BFBFBBFRRR\n" +
        "FFBBFBFRLL\n" +
        "BBFBBBBRLR\n" +
        "BFBFBFBLRL\n" +
        "BBBFFBBLRR\n" +
        "BBFFBFFRLL\n" +
        "FFBFBFFRRR\n" +
        "FFBBFFBRRR\n" +
        "BBFBFBBLRR\n" +
        "BFFBFFBLLR\n" +
        "FBFFBFFRLL\n" +
        "FFBFFFFLLL\n" +
        "FBFBFFFLRL\n" +
        "FBFFBBFLLR\n" +
        "BFFBFFBLRR\n" +
        "FBFFFFFRLL\n" +
        "BFBFBFFRLL\n" +
        "FFBFFFBLRR\n" +
        "BFBBBBFLRR\n" +
        "BFFBBBBRRR\n" +
        "FBFFBBBRLL\n" +
        "BBBFBBBRRL\n" +
        "FFFBBFFLRR\n" +
        "FFFFBFBRLR\n" +
        "BBFBBBFRLR\n" +
        "FBBBBFFRRL\n" +
        "FBFFFBFLLR\n" +
        "BFFBFFBRRL\n" +
        "BBFBFFFLRR\n" +
        "FFFBFFBLLR\n" +
        "FBBBFBBLRL\n" +
        "FBFBFBBLLR\n" +
        "BFFFBFFLLR\n" +
        "FFFFFBBRLR\n" +
        "BBFFBFFRRL\n" +
        "BFBFBBBRLR\n" +
        "FBBBFFBRRR\n" +
        "BBFBBFBRLR\n" +
        "FBFBBFFLRL\n" +
        "BBBBFFFLLL\n" +
        "BBFFBBBLLL\n" +
        "FBFBBFFRRR\n" +
        "BBFFBFFLLL\n" +
        "FBBBFFFLRL\n" +
        "BFFBFFFLRL\n" +
        "FBBFFFBRLR\n" +
        "FBBFBBBLRL\n" +
        "FFBFBBFLLL\n" +
        "FBFFBFFRRR\n" +
        "BFFFFFFLLL\n" +
        "BBFBBFBRLL\n" +
        "BFFFBFBRLL\n" +
        "FBFFBFBLLL\n" +
        "FFBFFBFRRL\n" +
        "BBFFBFBLLR\n" +
        "FBBBFBFRLR\n" +
        "BFBFBFFRRL\n" +
        "BFBFFFBLLR\n" +
        "FFBBFBBRLR\n" +
        "BBFBFBBRRL\n" +
        "FFBFBFFRRL\n" +
        "BFFBBFBRRR\n" +
        "BFFFFBBLLR\n" +
        "BFBFFBBRLL\n" +
        "BFBBFFBRRR\n" +
        "FBFBBFBRRL\n" +
        "FFFFBBFRRR\n" +
        "BFFFBFBLRR\n" +
        "FBFFFBFLLL\n" +
        "BBFBBBBLLL\n" +
        "BBFFFFBLLR\n" +
        "FFFBBFFRRR\n" +
        "FFBBBFBLRL\n" +
        "BFBBFFFRRR\n" +
        "BBFBFFBLLR\n" +
        "FFBBFFBLRL\n" +
        "FFBFFFBLRL\n" +
        "BBFBBFFRLR\n" +
        "FFBBFFFRRL\n" +
        "BBFFFBBLRL\n" +
        "FFFBFBFLRL\n" +
        "FFBBFBBLLR\n" +
        "FBFFBFFRLR\n" +
        "BBFBFBFRLL\n" +
        "FFFBFFBLLL\n" +
        "BFFFBBFRRL\n" +
        "FBFBFFFLLL\n" +
        "BBFFBBFLRR\n" +
        "BFFBBFBLRL\n" +
        "FFBBFBFRLR\n" +
        "BBBFFFBLRL\n" +
        "FBFBBBBRRR\n" +
        "BFBBBFBLLL\n" +
        "BFBBFFBLLL\n" +
        "BFFFBFFRLR\n" +
        "BBBFBFFRLR\n" +
        "FBBBFFBLLL\n" +
        "FFFFBFFRLL\n" +
        "FFFBFFBRRL\n" +
        "BFBFBBBRRL\n" +
        "FBBFBBFRLL\n" +
        "BBFBBBBLLR\n" +
        "BFFBBBFLLR\n" +
        "FFBFBBBRRR\n" +
        "FFBFFFBRLR\n" +
        "BFBBFFBRRL\n" +
        "BBBFBFFLLR\n" +
        "FBBBFFBLRR\n" +
        "FBFBBFFLLL\n" +
        "FBFBFFFRLR\n" +
        "FBBFFFFRLL\n" +
        "FFBBFBFRRL\n" +
        "BBFBBBBLRL\n" +
        "FBBBBBBLLL\n" +
        "FFFBFFFRLR\n" +
        "FBBFFFFLLL\n" +
        "FFFBBFBRRR\n" +
        "BBFFBFBLRR\n" +
        "FFBFFBBLLR\n" +
        "FBBBFFBLRL\n" +
        "BBFBBBBLRR\n" +
        "FFBFBFFLLL\n" +
        "FBBBBFBRRR\n" +
        "FFBBBFFLLR\n" +
        "FBFFFBFLRR\n" +
        "BFFBFBBRLR\n" +
        "FBFBFFBRRR\n" +
        "BBFFBBBLLR\n" +
        "BFBFBBFRRL\n" +
        "FBFFFFBLLR\n" +
        "FFBBFBFRRR\n" +
        "BFBFFFFRLL\n" +
        "FFFFBBFRLL\n" +
        "FBBFBBBLRR\n" +
        "FBBBBFFLLL\n" +
        "FBBFFFBRRR\n" +
        "FBBBFBFLRR\n" +
        "BFFBFBBRLL\n" +
        "FBFFFFBRRR\n" +
        "BFBBBBBRLR\n" +
        "BBBFFBBLLR\n" +
        "BFFBFFFRLL\n" +
        "BBFBFFBRLR\n" +
        "BFFFBFBRRR\n" +
        "FBBFFBFLRR\n" +
        "BFFFFFFRLR\n" +
        "FBBFFBFLLL\n" +
        "BBBFBFFRRR\n" +
        "FBBFFBBLLR\n" +
        "FBBFFFFRLR\n" +
        "FFFBFFFRRR\n" +
        "BFFFFFFRRL\n" +
        "FFFBFFFLRR\n" +
        "BFFFFFBRRL\n" +
        "BFFFBBBRLL\n" +
        "BFBBBBFRRL\n" +
        "BBBFBBFLRL\n" +
        "BBBFFBBLRL\n" +
        "FBFBFBBLRR\n" +
        "BBFFFBFLRL\n" +
        "BFBFFFFLRR\n" +
        "FBFBBFBLLR\n" +
        "BBFBFBFRRL\n" +
        "FFBBBFBRLR\n" +
        "FFBBFBFLLL\n" +
        "FBBFBFBRLR\n" +
        "FBFBBBFLRR\n" +
        "BFBFBBBLLR\n" +
        "FFBBBBFRLL\n" +
        "FFFBBBBLRL\n" +
        "BFBFBBBRLL\n" +
        "BFBBFBBRRR\n" +
        "BFBBBBBRRR\n" +
        "FFBFBBFLLR\n" +
        "FBBBFBFLRL\n" +
        "BBFFFBFRLR\n" +
        "FBBBFBBLRR\n" +
        "BBFFFFFRLR\n" +
        "BFBFFFFLRL\n" +
        "BFBFFBFRLR\n" +
        "FBBBBBFRLL\n" +
        "FFFBFBFRLR\n" +
        "BFBFBFFLRL\n" +
        "FBFFBFBLLR\n" +
        "BFFBBBBRLR\n" +
        "FBFFFBBLLR\n" +
        "FBBFBFFLLR\n" +
        "FBBFFFFLLR\n" +
        "BFBBBFBRRR\n" +
        "FFBBBFFLLL\n" +
        "FFBBFFBRLL\n" +
        "FBBFBBBRRL\n" +
        "BBFBFFFRRL\n" +
        "FFBBBBFLLR\n" +
        "FBBFFFBRLL\n" +
        "FFFBBBBLLR\n" +
        "FBFFFFFLRL\n" +
        "FFFFBFBRRR\n" +
        "FBFBFBBRLR\n" +
        "BFFBBFBLRR\n" +
        "FFFFBFFRRR\n" +
        "BBFBBFFRRR\n" +
        "BBFBFBFRRR\n" +
        "FBFFFFFRRL\n" +
        "BFFFFBFLRL\n" +
        "BFFFFFFRLL\n" +
        "BFBFFBFLRR\n" +
        "BBFFBFBRLR\n" +
        "FFFBBBFRLR\n" +
        "FFBBFBBLLL\n" +
        "FBBBBFBLLL\n" +
        "FFBBBFFLRR\n" +
        "FFBFFBBRLL\n" +
        "BFFBBFBRRL\n" +
        "FFBFBFBLRR\n" +
        "FFBFBBFRLL\n" +
        "FBBFBBBLLL\n" +
        "FBFBBFBRLR\n" +
        "BBFFFBBLRR\n" +
        "FFFBFFFRRL\n" +
        "FFBBBFBRLL\n" +
        "FBBBFBFRRL\n" +
        "FBFFFBBRLR\n" +
        "FFFBFFFLLL\n" +
        "BFBBFBBLRR\n" +
        "BFFBFBFRRL\n" +
        "FFBBBBFLRL\n" +
        "BBBFFBFLRL\n" +
        "FBFFBBFLRL\n" +
        "FBBBFFFLRR\n" +
        "BBFFBBBRRL\n" +
        "FFBBFBFLRR\n" +
        "BFFBBBBRRL\n" +
        "BBFFBFBRLL\n" +
        "BBFFFFFRRL\n" +
        "FBFFFBBRRR\n" +
        "FFFBFBBLLR\n" +
        "FFBFBFBLRL\n" +
        "FBFFBFFLLR\n" +
        "FFFFBBBRRL\n" +
        "BFBBBFFLRL\n" +
        "BBBFBBBLLL\n" +
        "BBFBFFFLLR\n" +
        "FFBBBFFRLR\n" +
        "BFFBFBFRRR\n" +
        "FBBBBBBRRL\n" +
        "BBBFBBBRRR\n" +
        "FBFFFBBRLL\n" +
        "BBFBFFBLRL\n" +
        "BFFFFFFLRL\n" +
        "BFBFBFFLLL\n" +
        "FFBBBBFRLR\n" +
        "BFFBFBFLRL\n" +
        "FBBFBFFLRL\n" +
        "BFBBFFFLRL\n" +
        "FFFBFFBRLL\n" +
        "BFBBBFBRRL\n" +
        "FFBFBFBLLR\n" +
        "BFFBFBBRRL\n" +
        "FBBBBFFLRR\n" +
        "BFFFBBBLLR\n" +
        "FBFFFBBRRL\n" +
        "FBBFBFFRLL\n" +
        "BBFBBFBRRR\n" +
        "BFFFFBBLRR\n" +
        "FFFFBBBRLR\n" +
        "FBBFFBFRLR\n" +
        "BFFFBBFLRR\n" +
        "BFFBBFFRLR\n" +
        "BFFBFBBLRL\n" +
        "FBFFBBBLLR\n" +
        "BFBBBFFLRR\n" +
        "BFFFFFBLRL\n" +
        "BBBFBFBRLR\n" +
        "BFBFFFBLRL\n" +
        "BBFBBFFLLR\n" +
        "FFBBFFBLRR\n" +
        "BBFBBFBLRR\n" +
        "BFFFFFBLLR\n" +
        "BFFBBFFLRL\n" +
        "BFFBBBBLLR\n" +
        "FBBBFFFRRR\n" +
        "BBBFFFFLLR\n" +
        "BFFBBFFRLL\n" +
        "FBBBBFFRRR\n" +
        "FFBFBBBLRR\n" +
        "FBBBFBBRRL\n" +
        "BFFFBBFLLL\n" +
        "FBFFFBBLRR\n" +
        "FBBFFFFRRR\n" +
        "BBFBFBFRLR\n" +
        "FBFFFFBRLR\n" +
        "FFBBBFFLRL\n" +
        "FFFFBBBLRR\n" +
        "BFFBBFBRLL\n" +
        "FBBFBBFRRR\n" +
        "BBBFBFBLLL\n" +
        "FBFBFFBRLL\n" +
        "BBBBFFFLLR\n" +
        "BFFBBBFLLL\n" +
        "FBBFBBBRRR\n" +
        "BBFFFFFLRR\n" +
        "BFFBFBFLLR\n" +
        "BBBFFBBLLL\n" +
        "BBBFBBBLLR\n" +
        "BBFFFFBLRL\n" +
        "FBBBBFFLLR\n" +
        "FFFBBFBLLL\n" +
        "FBBFFBFRRR\n" +
        "FBBBBFFRLR\n" +
        "FBFBFBFLLL\n" +
        "BBBFBBBLRR\n" +
        "FFFBFBFRRL\n" +
        "BFFFBBBRRR\n" +
        "BBBFBFBLLR\n" +
        "FBFBFBBLLL\n" +
        "BBFBFFBLLL\n" +
        "FFBFBFBRRR\n" +
        "BBFBFBBRLL\n" +
        "FBFFFFBLRR\n" +
        "BBFFFBBRLR\n" +
        "FBBFFBFLLR\n" +
        "BBFBBBFRLL\n" +
        "FFFBBFFLLR\n" +
        "FBBFFBFLRL\n" +
        "BBFFFBFRRR\n" +
        "FBBBBBBLRR\n" +
        "BBBFBBBRLL\n" +
        "BBFBFFFRRR\n" +
        "BFFFFBBRRL\n" +
        "FFFBBFBRLR\n" +
        "BFFBFFBRRR\n" +
        "BFBBFBFLRR\n" +
        "FFBBBBBRRR\n" +
        "BFFFBFBLLR\n" +
        "BFFBFFFRLR\n" +
        "BFFBFBFRLR\n" +
        "FFFBBBFRRL\n" +
        "FFFBFFBLRL\n" +
        "FFFFBBFLLL\n" +
        "BFBBFBBRLR\n" +
        "FFBBBBFLRR\n" +
        "BBFBFBBLLL\n" +
        "BFBBBBBRLL\n" +
        "BFBBBFFRLL\n" +
        "FBBBBBFLRR\n" +
        "FBFFBBFRRR\n" +
        "FBFFBBBRRL\n" +
        "BFBBBBFLRL\n" +
        "BFFBBFBLLR\n" +
        "FBFFFBBLRL\n" +
        "FBBFBBBLLR\n" +
        "BFBBFFBLRR\n" +
        "FBBFFBFRRL\n" +
        "FFBBBBBRLR\n" +
        "FFBFFBBRRL\n" +
        "FBBFFBBRLL\n" +
        "FFFFBBFRRL\n" +
        "BBFFFBFLLR\n" +
        "BBFBBFFLRR\n" +
        "BFBBBBBLLR\n" +
        "FBFFFFFLRR\n" +
        "FFBFFBFLLL\n" +
        "BFBFFBFLLL\n" +
        "BBBFFBBRRR\n" +
        "FBFBBBFLRL\n" +
        "FBFBFBBRRR\n" +
        "BBBFFFBRLR\n" +
        "BBBFBFBRRR\n" +
        "FFFFBFFLLL\n" +
        "BFBFFBFLLR\n" +
        "BFBFFFBRRL\n" +
        "FFBFBBBLLL\n" +
        "BFFFBBBLLL\n" +
        "BFBBBBFRRR\n" +
        "BBFBBFBLLL\n" +
        "FFBBBBBRRL\n" +
        "BBBFBFFLLL\n" +
        "BFFBFFFRRL\n" +
        "FFFBFFFRLL\n" +
        "BFBFBBFRLL\n" +
        "BFBBFBFRLR\n" +
        "FFFBBFFLLL\n" +
        "FFBBBFFRLL\n" +
        "FFBFFFFRRL\n" +
        "BFBFBFFLRR\n" +
        "BBFBFBBRLR\n" +
        "BBFFFFBLLL\n" +
        "BFFBBFFLLR\n" +
        "FFFBBFBRRL\n" +
        "BFFBBBFRRR\n" +
        "BFFBBBFLRR\n" +
        "BFBBBFBRLL\n" +
        "FBFFBBFRRL\n" +
        "BBFFBFFRRR\n" +
        "BBFFBFBLLL\n" +
        "FFFBFFFLLR\n" +
        "FBFFBFFLRL\n" +
        "FBFFBFFLLL\n" +
        "FFFFBBFLRR\n" +
        "BBBFBFFLRL\n" +
        "FBBBFBBLLL\n" +
        "FFBFFFFRRR";

    // console.log(findHighestSeat(convert(input)));
    console.log(findHighestSeat(convert(input)))
}

main();
